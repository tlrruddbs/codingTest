최단 경로 알고리즘은 말 그대로 가장 짧은 경로를 찾는 알고리즘 (길찾기)

대부분 ㅁ최단거리를 출력하도록 요구하는 문제가 많이 출제됨

다익스트라, 플로이드 두개만 알아도 최단경로 문제는 어느정도 해결이 가능하다.

그리디 알고리즘과 다이나믹 프로그래밍 알고리즘이 최단 경로 알고리즘에 그대로 적용이 된다는 특징을 가지고있다.
즉 그리디 알고리즘과 다이나믹 프로그래밍의 한 유형으로 볼 수 있다.

다익스트라:
다익스트라는 기본적으로 그리디 알고리즘으로 분류된다.
매번 가장 비용이 적은 노드를 선택해서 임의의 과정을 반복하기 때문이다.

1. 출발 노드를 설정한다
2. 최단 거리의 테이블을 초기화한다.
3. 방문하지 않는 노드 중에서 최단 거리가 가장 짧은 노드를 선택한다.
4. 해당 노드를 거쳐 다른 노드로 가는 비용을 계산하여 최단 거리 테이블을 갱신한다.
5. 위 과장에서 3,4를 방문한다.

다익스트라 알고리즘은 최단 경로를 구하는 과정에서 각 노드에 대한 현재까지의 최단 거리 정보를 항상 1차원 리스트에 저장하며 계속 갱신하는 특징을 가짐

다익스트라 알고리즘을 구현하는 방법은 두가지
1. 구현하기 쉽지만 느리게 동작하는 코드
2. 구현하기 까다롭지만 빠르게 동작하는 코드

2를 정확히 이해하고 구현할 수 있을 때까지 연습해야함


플루이드:
다익스트라와 마찬가지로 거쳐가는 노드를 기준으로 알고리즘을 수행한다
* 다만 매 단계마다 방문하지 않는 노드 중 최단 거리를 갖는 노드를 찾을 필요가 없음
a에서 b로가는것보다 a에서 k를거쳐 b로 가는지 검사